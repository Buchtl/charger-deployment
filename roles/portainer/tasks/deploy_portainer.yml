
---
# roles/portainer/tasks/portaienr_deploy.yml
#
# Task: Deploy Portainer
#
#
# Expects:
#   portainer_host (string)              – Hostname or IP of the Portainer server (e.g. pi4b)
#   portainer_version (string)          – Version tag of Portainer (e.g. "2.19.4")
#   portainer_admin_password_hash (string) – Argon2 hashed password for admin user
#
# Requires:
#   - Docker Swarm mode must be initialized
#   - The node must have manager role (for central Portainer service)
#
# Example usage:
#   - hosts: localhost
#     tasks:
#       - include_tasks: roles/portainer/tasks/deploy_agent_and_portainer.yml
#         vars:
#           portainer_host: pi4b
#           portainer_version: "2.19.4"
#           portainer_admin_password_hash: "$argon2id$v=19$m=65536,t=2,p=1$..."

- name: Create Docker volume portainer data
  community.docker.docker_volume:
    name: portainer_data
    driver: local
    driver_options:
      type: none
      device: /srv/portainer/data/
      o: bind

- name: Deploy Portainer service via Docker Swarm
  community.docker.docker_swarm_service:
    name: portainer
    image: "portainer/portainer-ce:{{ portainer_version }}"
    user: "{{ charger_uid }}:{{ charger_gid }}"
    networks:
      - name: portainer_agent_network
    publish:
      - published_port: 9443
        target_port: 9443
    mounts:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      - type: volume
        source: portainer_data
        target: /data
    secrets:
      - secret_name: cert_key
        filename: cert.key
        mode: 0444
      - secret_name: cert
        filename: cert.crt
        mode: 0444
    placement:
      constraints:
        - node.labels.manager == true
    args:
      - "--admin-password={{ portainer_admin_password_hash }}"
      - "--sslcert"
      - "/run/secrets/cert.crt"
      - "--sslkey"
      - "/run/secrets/cert.key"

- name: Wait for Portainer HTTPS API to respond
  uri:
    validate_certs: false
    url: "{{ portainer_api_url }}/status"
    method: GET
    status_code: 200
    return_content: no
  register: portainer_status
  until: portainer_status.status == 200
  retries: 10
  delay: 3