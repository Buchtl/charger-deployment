
---
# roles/portainer/tasks/portaienr_deploy.yml
#
# Task: Deploy Portainer
#
#
# Expects:
#   portainer_host (string)              – Hostname or IP of the Portainer server (e.g. pi4b)
#   portainer_version (string)          – Version tag of Portainer (e.g. "2.19.4")
#   portainer_admin_password_hash (string) – Argon2 hashed password for admin user
#
# Requires:
#   - Docker Swarm mode must be initialized
#   - The node must have manager role (for central Portainer service)
#
# Example usage:
#   - hosts: localhost
#     tasks:
#       - include_tasks: roles/portainer/tasks/deploy_agent_and_portainer.yml
#         vars:
#           portainer_host: pi4b
#           portainer_version: "2.19.4"
#           portainer_admin_password_hash: "$argon2id$v=19$m=65536,t=2,p=1$..."

- name: Deploy Portainer
  shell: |
    docker volume create portainer_data
    docker service create \
      --name portainer \
      --publish mode=host,target=9000,published=9000 \
      --publish mode=host,target=9443,published=9443 \
      --constraint 'node.role == manager' \
      --mount type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock \
      --mount type=volume,src=portainer_data,dst=/data \
      --network portainer_agent_network \
      portainer/portainer-ce:{{ portainer_version }} \
      --admin-password='{{ portainer_admin_password_hash }}'
  args:
    creates: /var/lib/docker/volumes/portainer_data

- name: Wait for Portainer HTTP API to respond
  uri:
    url: "http://{{ portainer_host }}:9000/api/status"
    method: GET
    status_code: 200
    return_content: no
  register: portainer_status
  until: portainer_status.status == 200
  retries: 10
  delay: 3