# roles/portainer/tasks/deploy_agent_and_portainer.yml
#
# Task: Deploy Portainer agent and central Portainer service
#
# Description:
#   This task provisions the Portainer agent and Portainer CE on a Docker Swarm cluster.
#   It creates the agent network, checks for existing services, deploys the agent and
#   central Portainer service (only if not already present), waits for both to be reachable,
#   and registers a new agent endpoint in Portainer's API.
#
# Expects:
#   portainer_host (string)              – Hostname or IP of the Portainer server (e.g. pi4b)
#   portainer_version (string)          – Version tag of Portainer (e.g. "2.19.4")
#   portainer_admin_password_hash (string) – Argon2 hashed password for admin user
#   portainer_endpoint_name (string)    – Name to assign to the Portainer agent endpoint
#
# Sets:
#   portainer_token (string)            – JWT token after authenticating to the API
#   portainer_create_endpoint (dict)    – API response from endpoint registration
#
# Requires:
#   - Docker Swarm mode must be initialized
#   - The node must have manager role (for central Portainer service)
#
# Example usage:
#   - hosts: localhost
#     tasks:
#       - include_tasks: roles/portainer/tasks/deploy_agent_and_portainer.yml
#         vars:
#           portainer_host: pi4b
#           portainer_version: "2.19.4"
#           portainer_admin_password_hash: "$argon2id$v=19$m=65536,t=2,p=1$..."
#           portainer_endpoint_name: charger


- name: Authenticate to Portainer (shared task)
  include_tasks: "../../portainer/tasks/authenticate.yml"

- name: Create Portainer agent endpoint "charger" (JSON attempt)
  uri:
    validate_certs: false
    url: "http://{{ portainer_host }}:9000/api/endpoints"
    method: POST
    headers:
      Authorization: "Bearer {{ portainer_token }}"
      Content-Type: "application/x-www-form-urlencoded"
    body_format: form-urlencoded
    body:
      Name: "{{ portainer_endpoint_name }}"
      URL: "tcp://{{ portainer_host }}:9001"
      GroupID: 1
      TLS: "true"
      TLSSkipVerify: "true"
      TLSSkipClientVerify: "true"
      EndpointCreationType: 2
    status_code: 200
  register: portainer_create_endpoint
